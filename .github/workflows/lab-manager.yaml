name: Lab Manager

env:
  TERRAFORM_VERSION: 1.11.0

on:
  workflow_dispatch: # Allows manual trigger via API
    inputs:
      cloud:
        description: "Cloud provider"
        type: choice
        options:
          - "aws"
          - "azure"
        required: true
        default: "aws"
      lab:
        description: "Lab name"
        type: choice
        options:
          - "basic"
        required: true
        default: "basic"
      student_username:
        description: "Unique student username"
        required: true
      timetoexpire:
        description: "Time to expire the lab (in minutes)"
        required: true
        type: number
        default: 60

jobs:
  terraform-apply:
    name: APPLY - ${{github.event.inputs.cloud}} - ${{ github.event.inputs.student_username }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Verify AWS CLI
        run: aws s3 ls # Example: List S3 buckets to confirm AWS access

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}
        run: |
          terraform init -reconfigure -backend-config=bucket=${{ vars.TF_STATE_BUCKET }} -backend-config=key=labs/${{ github.event.inputs.student_username }}/terraform.tfstate -backend-config=region=${{ vars.AWS_REGION }} -backend-config=encrypt=true -backend-config=use_lockfile=true

      - name: Terraform Apply
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}
        run: terraform apply -auto-approve -var='student_username=${{ github.event.inputs.student_username }}'

      - name: Get Terraform Outputs
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}
        run: |
          output_file="${{ github.event.inputs.student_username }}.json"

          # Generate JSON output file
          echo "{" > "$output_file"
          echo "  \"STUDENT_USERNAME\": \"$(terraform output -raw student_username | tr -d '\n' | sed 's/"/\\"/g')\"," >> "$output_file"
          echo "  \"STUDENT_PASSWORD\": \"$(terraform output -raw student_password | tr -d '\n' | sed 's/"/\\"/g' | sed 's/:/\\:/g')\"," >> "$output_file"
          echo "  \"AWS_CONSOLE_URL\": \"$(terraform output -raw aws_console_url | tr -d '\n' | sed 's/"/\\"/g')\"" >> "$output_file"
          echo "}" >> "$output_file"

          # Display the output file for debugging
          cat "$output_file"

      - name: Save Outputs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: |
            ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}/${{ github.event.inputs.student_username }}.json
  terraform-destroy:
    name: DESTROY - ${{github.event.inputs.cloud}} - ${{ github.event.inputs.student_username }}
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for lab expiration
        run: |
          echo "Sleeping for ${{ github.event.inputs.timetoexpire }} minutes..."
          sleep ${{ github.event.inputs.timetoexpire }}m
          echo "Done sleeping. Proceeding with Terraform destroy."

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}
        run: |
          terraform init -reconfigure -backend-config=bucket=${{ vars.TF_STATE_BUCKET }} -backend-config=key=labs/${{ github.event.inputs.student_username }}/terraform.tfstate -backend-config=region=${{ vars.AWS_REGION }} -backend-config=encrypt=true -backend-config=use_lockfile=true

      - name: Terraform Destroy
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.cloud }}/labs/${{ github.event.inputs.lab }}
        run: terraform destroy -auto-approve -var='student_username=${{ github.event.inputs.student_username }}'
